/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
				// -------------------------------------------------------------------------------------------------------------------------------------
				// |   7   |  8   |  9   |  0   |LT(1,ESC)| Q |   W   |  E    |  R   |  T    |  Y   |  U   |  I   |  O   |  P   |   [   |  ]    | BSC  |
				// |   4   |  5   |  6   |LT(1,ESC)|TAB|  A   |   S   |  D    |  F   |  G    |  H   |  J   |  K   |  L   |  ;   |   '   |     ENTER    |
				// |   1   |  2   |  3   |LT(1,ESC)|LSFT| Z   |   X   |  C    |  V   |  B    |  N   |  M   |  ,   |  .   |  /   | RSHIFT|  UP   | GRV  |
				// |SFT(MINS)|COM |EQL |SFT(BSC)| LCTL | LGUI |  LALT | MO(1) |    SPACE     |  BSC | MO(1)| RALT | RGUI | RCTL | LEFT  | DOWN  | RIGHT|
			bindings = <
				&kp N7           &kp N8   &kp N9    &kp N0          &lt 1 ESC &kp Q    &kp W    &kp E    &kp R     &kp T     &kp Y    &kp U    &kp I     &kp O    &kp P     &kp LBKT  &kp RBKT &kp BSPC  
				&kp N4           &kp N5   &kp N6    &lt 1 RET       &kp TAB   &kp A    &kp S    &kp D    &kp F     &kp G     &kp H    &kp J    &kp K     &kp L    &kp SEMI  &kp COMMA &kp RET  &kp RET   
				&kp N1           &kp N2   &kp N3    &lt 1 RET       &kp LSHFT &kp Z    &kp X    &kp C    &kp V     &kp B     &kp N    &kp M    &kp COMMA &kp DOT  &kp FSLH  &kp RSHFT &kp UP   &kp GRAVE 
				&mt LSHIFT MINUS &kp DOT  &kp EQUAL &mt LSHIFT BSPC &kp LCTRL &kp LGUI &kp LALT &mo 1    &kp SPACE &kp SPACE &kp BSPC &mo 1    &kp RALT  &kp RGUI &kp RCTRL &kp LEFT  &kp DOWN &kp RIGHT 
			>;
		};

		raise {
			bindings = <
				&kp F7   &kp F8   &kp F9   &kp F10  &kp GRAVE &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5 &trans   &out OUT_TOG &trans   &kp MINUS &kp EQUAL &kp LPAR   &kp RPAR     &kp BSLH 
				&kp F4   &kp F5   &kp F6   &trans   &trans    &trans       &trans       &trans       &trans       &trans       &trans   &trans       &trans   &trans    &trans    &trans     &trans       &trans   
				&kp F1   &kp F2   &kp F3   &trans   &trans    &trans       &trans       &bt BT_CLR   &trans       &trans       &trans   &trans       &trans   &trans    &trans    &kp CLCK   &kp C_VOL_UP &trans   
				&kp F11  &kp F12  &trans   &trans   &trans    &trans       &trans       &trans       &trans       &trans       &kp DEL  &trans       &trans   &trans    &trans    &kp C_NEXT &kp C_VOL_DN &kp C_PP 
			>;
		};
	};
};
